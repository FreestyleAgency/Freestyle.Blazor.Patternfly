<div class="pf-c-expandable-section @(Expanded ? CssClassConstants.Expanded : String.Empty)" @attributes="AdditionalAttributes">
	<button type="button" class="pf-c-expandable-section__toggle" aria-expanded="@(Expanded.ToString())" @onclick="ToggleExpanded" @onclick:stopPropagation>
		<span class="pf-c-expandable-section__toggle-icon">
			<i class="fas fa-angle-right pf-c-expandable__toggle-icon" aria-hidden="true"></i>
		</span>
		<span class="pf-c-expandable-section__toggle-text">@(Expanded ? ShowLessText : ShowMoreText)</span>
	</button>
	<div class="pf-c-expandable-section__content" hidden="@(!Expanded)">@ChildContent</div>
</div>

@code {
	private bool _expanded;

	[Parameter]
	public bool Expanded
	{
		get { return _expanded; }
		set
		{
			if (_expanded == value) return;

			_expanded = value;

			if (ExpandedChanged.HasDelegate)
				ExpandedChanged.InvokeAsync(value);
		}
	}

	[Parameter]
	public EventCallback<bool> ExpandedChanged { get; set; }

	[Parameter]
	public string ShowMoreText { get; set; } = "Show more";

	[Parameter]
	public string ShowLessText { get; set; } = "Show less";

	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter(CaptureUnmatchedValues = true)]
	public IDictionary<string, object> AdditionalAttributes { get; set; }

	private void ToggleExpanded()
	{
		Expanded = !Expanded;
		StateHasChanged();
	}
}
