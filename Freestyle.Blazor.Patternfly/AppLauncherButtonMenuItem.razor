<li>
	<button class="pf-c-app-launcher__menu-item" type="button" @onclick="OnClick" @attributes="Attributes">
		@if (!String.IsNullOrEmpty(IconUrl) || !String.IsNullOrEmpty(IconCssClass))
		{
			<span class="pf-c-app-launcher__menu-item-icon">
				@if (!String.IsNullOrEmpty(IconUrl))
				{
					<img src="@IconUrl" alt="Icon" aria-hidden="true" />
				}
				else
				{
					<i class="@IconCssClass" aria-hidden="true"></i>
				}
			</span>
		}
		@Text
	</button>
</li>

@code {
	[Parameter]
	public EventCallback<MouseEventArgs> OnClickCallback { get; set; }

	[Parameter]
	public string IconUrl { get; set; }

	[Parameter]
	public string IconCssClass { get; set; }

	[Parameter]
	public string Text { get; set; }

	[CascadingParameter(Name = "AppLauncher")]
	public AppLauncher AppLauncher { get; set; }

	[CascadingParameter(Name = "AppLauncherGroup")]
	public AppLauncherGroup AppLauncherGroup { get; set; }

	[Parameter]
	public bool CollapseOnClick { get; set; } = true;

	[Parameter(CaptureUnmatchedValues = true)]
	public IDictionary<string, object> Attributes { get; set; }

	protected override void OnInitialized()
	{
		if (AppLauncher.HasGroups && AppLauncherGroup == null)
			throw new Exception("All menu items must be within an AppLauncherGroup if an AppLauncher contains at least 1 group.");

		base.OnInitialized();
	}

	private void OnClick(MouseEventArgs mouseEventArgs)
	{
		OnClickCallback.InvokeAsync(mouseEventArgs);

		if (CollapseOnClick)
			AppLauncher.Collapse();
	}
}
