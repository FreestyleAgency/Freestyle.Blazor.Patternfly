<div class="pf-c-check">
	@if (CheckAlignment == LeftRightHorizontalAlignment.Left)
	{
		<input class="pf-c-check__input" type="checkbox" id="@_id" @attributes="AdditionalAttributes" disabled="@(!Enabled)" checked="@_checked" />
	}
	<label class="pf-c-check__label @(Enabled ? String.Empty : CssClassConstants.Disabled)" for="@_id">@Label</label>
	@if (CheckAlignment == LeftRightHorizontalAlignment.Right)
	{
		<input class="pf-c-check__input" type="checkbox" id="@_id" @attributes="AdditionalAttributes" disabled="@(!Enabled)" checked="@_checked" />
	}
	@if (!String.IsNullOrWhiteSpace(Description))
	{
		<div class="pf-c-check__description">@Description</div>
	}
</div>

@code {
	private string _id = Guid.NewGuid().ToString();
	private bool _checked;

	[Parameter]
	public string Label { get; set; }

	[Parameter]
	public string Description { get; set; }

	[Parameter]
	public LeftRightHorizontalAlignment CheckAlignment { get; set; } = LeftRightHorizontalAlignment.Left;

	[Parameter]
	public bool Enabled { get; set; } = true;

	[Parameter]
	public bool Checked
	{
		get => _checked;
		set
		{
			if (_checked == value) return;

			_checked = value;
			CheckedChanged.InvokeAsync(value);
		}
	}

	[Parameter]
	public EventCallback<bool> CheckedChanged { get; set; }

	[Parameter(CaptureUnmatchedValues = true)]
	public IDictionary<string, object> AdditionalAttributes { get; set; }
}
